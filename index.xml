<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tchoupapps-fr</title><link>https://tchoupapps.fr/</link><description>Recent content on Tchoupapps-fr</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><lastBuildDate>Thu, 08 Jul 2021 13:23:23 -0400</lastBuildDate><atom:link href="https://tchoupapps.fr/index.xml" rel="self" type="application/rss+xml"/><item><title>BEN HARRY</title><link>https://tchoupapps.fr/posts/phack21/ben-harry/</link><pubDate>Thu, 08 Jul 2021 13:23:23 -0400</pubDate><guid>https://tchoupapps.fr/posts/phack21/ben-harry/</guid><description>Ben &amp;amp; Harry We have to go on the website : ben-and-harry.phack.fr:1664
We can see three informations, &amp;ldquo;b&amp;rdquo; ,&amp;ldquo;code&amp;rdquo; and &amp;ldquo;msg&amp;rdquo;
The msg is asking us to answer it so after a while, we manage to understand that the &amp;ldquo;b&amp;rdquo; variable is the base used for the number. So our guess is to decrypt using the base and then send back to the server the answer.
Here is the python script :</description></item><item><title>PHILLIP2</title><link>https://tchoupapps.fr/posts/umdctf21/phillip2/</link><pubDate>Fri, 18 Jun 2021 21:12:44 -0700</pubDate><guid>https://tchoupapps.fr/posts/umdctf21/phillip2/</guid><description>Phillip 2 Description We have 3 files in this challenge:
module.dwarf philip-2.raw.zip System.map-5.8.0-25-generic The module.dwarf and System.map are the same than phillip 1, so I re-use the profile.
Solve Fristly, we are checking the bash history:
$ sudo vol.py -f philip-2.raw --profile=Linux_phillipx64 linux_bash NOTHING_FOUND Ok, lets try to found and dump .bash_history:
$ sudo vol.py -f philip-2.raw --profile=Linux_phillipx64 linux_enumerate_files | grep /home/lubuntu/.bash_history Volatility Foundation Volatility Framework 2.6.1 0xffff95f1c623fc30 5690 /cow/upper/home/lubuntu/.</description></item><item><title>PHILLIP1</title><link>https://tchoupapps.fr/posts/umdctf21/phillip1/</link><pubDate>Fri, 18 Jun 2021 21:12:38 -0700</pubDate><guid>https://tchoupapps.fr/posts/umdctf21/phillip1/</guid><description>Phillip 1 Description We have 3 files in this challenge:
module.dwarf philip-1.raw.zip System.map-5.8.0-25-generic Solve We quickly understand, we have dwarf and System.map for built a custom volatility profile, for analysing our philip-1.raw .
So let&amp;rsquo;s build it:
$ zip _phillip.zip module.dwarf System.map-5.8.0-25-generic $ sudo mv _phillip.zip /usr/local/lib/python2.7/dist-packages/volatility/plugins/overlays/linux/. $ sudo vol.py --info | grep phillip Volatility Foundation Volatility Framework 2.6.1 Linux_phillipx64 - A Profile for Linux _phillip x64 Ok,now we have the profile, we can dig into our dump.</description></item><item><title>WIKIBOT</title><link>https://tchoupapps.fr/posts/phack21/wikibot/</link><pubDate>Fri, 18 Jun 2021 21:03:14 -0700</pubDate><guid>https://tchoupapps.fr/posts/phack21/wikibot/</guid><description>WikiBot Description Solve Nous avons un lien vers le discord du CTF.
Après avoir envoyer un DM au bot, celui-ci, nous demande de répondre à une série de questions en moins de 3 secondes.
Pour résoudre ce challenge, je vais utilisé mon compte Discord pour communiquer avec ce bot à travers l&amp;rsquo;API discord.
J&amp;rsquo;ai donc besoin de DiscordPy pour mon programme en python.
J&amp;rsquo;ai besoin de deux informations, pour pouvoir communiquer avec le bot.</description></item><item><title>LEAP-OF-FAITH</title><link>https://tchoupapps.fr/posts/swampctf19/leap-of-faith/</link><pubDate>Fri, 18 Jun 2021 20:42:02 -0700</pubDate><guid>https://tchoupapps.fr/posts/swampctf19/leap-of-faith/</guid><description>Leap of Faith Description Résolution D&amp;rsquo;apres la description, il s&amp;rsquo;agit d&amp;rsquo;une citation du film matrix, avec comme particularité de nous parler d&amp;rsquo;outils de stego, avec une image de neo.
La première chose que je fais, c&amp;rsquo;est une verification du type de fichier :
file leap_of_faith.jpg Rien d&amp;rsquo;anormale dans le fichier, il correspond bien à son type.
J&amp;rsquo;essaye donc d&amp;rsquo;extraire les données exif de l&amp;rsquo;image.
exiftool leap_of_faith.jpg Je remarque la présence d&amp;rsquo;un thumbnail, que j&amp;rsquo;extrais de la manière suivante:</description></item><item><title>MULTI-CONTRACT-OWNER</title><link>https://tchoupapps.fr/posts/swampctf19/multi-contract-owner/</link><pubDate>Fri, 18 Jun 2021 20:29:21 -0700</pubDate><guid>https://tchoupapps.fr/posts/swampctf19/multi-contract-owner/</guid><description>Multi_Contract_Owner Description Résolution Mise en place de l&amp;rsquo;environnement de travail Pre-requis :
Apprentissage du langage solidity : CryptoZombie Quelques bases en Javascript. Installation du plugin Metasmask :
Celui-ci va nous servir de Wallet pour nos transactions avec la blockchain de test.
Paramétrer le wallet sur le Ropsen Test Network, puis deposer de l'ether Faucet pour nos futures transactions.
Voilà notre plugin metasmask est prêt.</description></item><item><title>RAID DEAD REDEMPTION</title><link>https://tchoupapps.fr/posts/phack21/raid-dead-redemption/</link><pubDate>Fri, 18 Jun 2021 20:01:53 -0700</pubDate><guid>https://tchoupapps.fr/posts/phack21/raid-dead-redemption/</guid><description>Raid Dead Redemption Description Solve Nous avons deux fichiers:
NoticeMastok_3000.pdf un pdf contenant une documentation technique. Un zip, contenant trois fichiers binaires DISK1.bin, DISK2.bin et DISK3.bin. Je fait une petite analyse rapide de ces fichiers:
$ ls -l -rw-rw-r-- 1 chapeaurouge chapeaurouge 662835 Dec 10 07:56 DISK1.bin -rw-rw-r-- 1 chapeaurouge chapeaurouge 0 Dec 10 07:56 DISK2.bin -rw-rw-r-- 1 chapeaurouge chapeaurouge 662835 Dec 10 07:56 DISK3.bin Je remarque que le fichier DISK2.</description></item><item><title>GENETICS</title><link>https://tchoupapps.fr/posts/b00t2root19/genetics/</link><pubDate>Fri, 18 Jun 2021 07:00:55 -0700</pubDate><guid>https://tchoupapps.fr/posts/b00t2root19/genetics/</guid><description>Genetics Description Résolution J&amp;rsquo;ouvre le message.
ACCAGTAAAACGTTGAGACAGTTGAATATCAAACTACACCGAATTCATATGTCACAGCGGCCGACACAGATGATAACA Le première chose que je remarque, c&amp;rsquo;est la présence de seulement 4 lettres différentes dans notre message : A, C, T et G.
Je lance un recherche sur google, aussitôt je tombe sur des sites qui parle de codage génétique (qui d&amp;rsquo;ailleurs est le titre du chall).
J&amp;rsquo;essaye les différents sites pour déchiffrer le code (celui sur decode.fr par exemple), sans succès. Puis je tombe sur une présentation d&amp;rsquo;un langage ésotérique grâce au code génétique : DNA encoding protocol</description></item><item><title>SCATTER-ME</title><link>https://tchoupapps.fr/posts/b00t2root19/scatter-me/</link><pubDate>Fri, 18 Jun 2021 07:00:42 -0700</pubDate><guid>https://tchoupapps.fr/posts/b00t2root19/scatter-me/</guid><description>Scatter-me Description Résolution J&amp;rsquo;ouvre mon fichier.
1:3:1;1.25:3:1;1.5:3:1;1.75:3:1;2:3:1;2:2.75:1;2:2.5:1;2:2.25:1;2:2:1;2:1.75:1;2:1.5:1;1:2.25:1;1.25:2.25:1;1.5:2.25:1;1.75:2.25:1;1:1.5:1;1.25:1.5:1;1.5:1.5:1;1.75:1.5:1;3:3:1;3.25:3:1;3.5:3:1;3.75:3:1;4:3:1;4:2.75:1;4:2.5:1;4:2.25:1;4:2:1;4:1.75:1;4:1.5:1;3:1.5:1;3.25:1.5:1;3.5:1.5:1;3.75:1.5:1;3:1.75:1;3:2:1;3:2.25:1;3:2.5:1;3:2.75:1;5:3:1;5.25:3:1;5.5:3:1;5.75:3:1;6:3:1;6:2.75:1;6:2.5:1;6:2.25:1;6:2:1;6:1.75:1;6:1.5:1;5.75:1.5:1;5.5:1.5:1;5.25:1.5:1;5:1.5:1;5:1.75:1;5:2:1;5:2.25:1;5:2.5:1;5:2.75:1;7:3:1;7.25:3:1;7.5:3:1;7.75:3:1;8:3:1;8:2.75:1;8:2.5:1;8:2.25:1;8:2:1;8:1.75:1;8:1.5:1;9:3:1;9.25:3:1;9.5:3:1;9.75:3:1;10:3:1;10:2.75:1;10:2.5:1;10:2.25:1;9.75:2.25:1;9.5:2.25:1;9.25:2.25:1;9:2.25:1;9:2:1;9:1.75:1;9:1.5:1;9.25:1.5:1;9.5:1.5:1;9.75:1.5:1;10:1.5:1;11:3:1;11.25:3:1;11.5:3:1;11.75:3:1;12:3:1;12:2.75:1;12:2.5:1;12:2.25:1;12:2:1;12:1.75:1;12:1.5:1;11.75:1.5:1;11.5:1.5:1;11.25:1.5:1;11:1.5:1;11:1.75:1;11:2:1;11:2.25:1;11:2.5:1;11:2.75:1;11.25:2.25:1;11.5:2.25:1;11.75:2.25:1 Je remarque que ce sont des cordonnées contenant les axes x, y et z(=1 donc inutile), et délimité par les caractères : et ;.
Je vais utiliser gnuplot pour l&amp;rsquo;affichage, je formate donc mon fichier grâce à sed, puis je l&amp;rsquo;affiche dans gnuplot grâce à mon script bash.
#!/bin/bash if [ $# != &amp;#34;1&amp;#34; ] then echo -e &amp;#34;usage: $0&amp;lt;filename&amp;gt;\nNeed a filename!&amp;#34; else cp $1 data.</description></item></channel></rss>